package extensions

import (
	"encoding/json"
	"fmt"
	"strings"

	. "github.com/blackcrw/wprecon/cli/config"
	"github.com/blackcrw/wprecon/pkg/gohttp"
	"github.com/blackcrw/wprecon/pkg/printer"
)

type Jsonformat struct {
	ID struct {
	} `json:"_id"`
	Vulnerabilities []struct {
		Title      string   `json:"Title"`
		Published  string   `json:"Published"`
		References []string `json:"References"`
		Version    string   `json:"Version"`
	} `json:"Vulnerabilities"`
}

func GetVuln(plugin string, version string) *Jsonformat {
	var jsonn Jsonformat

	http := gohttp.NewHTTPClient()

	http.SetURL("http://144.217.235.104:8777")
	http.SetURLDirectory("/v1/api/vulnerable/plugins/" + plugin + "/" + version)
	http.OnRandomUserAgent(InfosWprecon.OtherInformationsBool["http.options.randomuseragent"])
	http.OnTLSCertificateVerify(InfosWprecon.OtherInformationsBool["http.options.tlscertificateverify"])

	response, err := http.Run()

	if strings.Contains(fmt.Sprintf("%s", err), "dial tcp 144.217.235.104:8777: connect: connection refused") {
		printer.Danger("Connection refused to API")
	}

	if err != nil {
		printer.Fatal(err)
	}

	if err = json.Unmarshal([]byte(response.Raw), &jsonn); err != nil {
		printer.Println(err)
	}

	return &jsonn
}
